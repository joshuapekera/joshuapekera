{"version":3,"file":"bundle.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","client/scripts/main.js"],"names":["jQuery","document","ready","$content","$","$icon","$menu","on","hasClass","removeClass","css","addClass","$body","content","smoothState","prefetch","pageCacheSize","onStart","duration","render","url","$container","toggleAnimationClass","animate","scrollTop","onProgress","find","onEnd","html","callback","reboundCarousel","data","tabWidths","tabWidthRunningSum","navOffsets","tabs","slides","captions","downIndex","endValue","viewportWidth","viewportHeight","nav","imageWidths","imageHeights","springSystem","rebound","SpringSystem","mainSpring","createSpring","downSpring","lastX","panVelocity","isDragging","innerWidth","innerHeight","totalWidth","calculateTabWidths","getElementById","layoutCaptions","window","width","each","i","val","navOffsetForIndex","setupMainSpring","setupPanSupport","setupTabPressedStates","setupArrowKeys","style","webkitTransform","MozTransform","selectTabIndex","down","click","mousedown","pressDownOnTabIndex","mouseup","releaseDownOnTabIndex","mouseleave","mouseenter","setSpringConfig","SpringConfig","fromOrigamiTensionAndFriction","addListener","onSpringUpdate","spring","progress","getCurrentValue","xTranslation","transitionForProgressInSteps","Math","abs","getVelocity","devicePixelRatio","floor","slideProgress","x","scale","transitionForProgressInRange","length","captionOpacity","opacity","tabOpacity","clampedProgress","item","addEventListener","e","touch","touches","startDragging","pageX","preventDefault","continueDragging","endDragging","clientX","setAtRest","progressForValueInRange","currentValue","setCurrentValue","currentPosition","restPosition","passedVelocityTolerance","passedDistanceTolerance","shouldAdvance","advanceForward","targetIndex","normalizedVelocity","setVelocity","rightEdges","bottomEdges","applyBottomPadding","slideItems","calculateContentScaleForIndex","y","leftPadding","parseInt","round","visibility","index","setEndValue","animated","offset","contentWidth","contentHeight","initialPress","isRubberbanding","keydown","currentIndex","positionTolerance","maxRubberbandDistance","inRubberbandableRegion","keyCode","keyup","isRubberBanding","value","startValue","steps","transition","normalizedProgress"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\njQuery(document).ready(function() {\n    'use strict';\n    // Pretty Menu with Toggle\n    var $content = $('body');\n    var $icon = $('#hamburgericon');\n    var $menu = $('#appnav > .menu');\n    $('.menu-button, .overlay').on('click', function() {\n        if ($content.hasClass('shift')) {\n            $content.removeClass('shift');\n            $icon.removeClass('open');\n            $menu.css('z-index','-1');\n        } else {\n            $content.addClass('shift');\n            $icon.addClass('open');\n            $menu.css('z-index', '1');\n        }\n    });\n});\n\n// smoothState\njQuery(document).ready(function() {\n    'use strict';\n    var $body    = $('html, body'),\n        content  = $('#appcontent').smoothState({\n            prefetch: true,\n            pageCacheSize: 4,\n            onStart: {\n                duration: 250,\n                render: function (url, $container) {\n                    content.toggleAnimationClass('is-exiting');\n                    $body.animate({\n                        scrollTop: 0\n                    });\n                }\n            },\n            onProgress : {\n                duration: 0, // Duration of the animations, if any.\n                render: function (url, $container) {\n                    $body.css('cursor', 'wait');\n                    $body.find('a').css('cursor', 'wait');\n                }\n            },\n            onEnd : {\n                duration: 0, // Duration of the animations, if any.\n                render: function (url, $container, $content) {\n                    $body.css('cursor', 'auto');\n                    $body.find('a').css('cursor', 'auto');\n                    $container.html($content);\n                }\n            },\n            callback : function(url, $container, $content) {\n                reboundCarousel();\n            }\n\n    }).data('smoothState');\n});\n\nvar tabWidths = [];\nvar tabWidthRunningSum = [];\nvar navOffsets = [];\nvar tabs = [];\nvar slides = [];\nvar captions = [];\nvar downIndex = 0;\nvar endValue = 0;\nvar viewportWidth = 0;\nvar viewportHeight = 0;\nvar nav;\nvar imageWidths = [968, 2400, 800, 2600, 968, 968, 2400, 2400];\nvar imageHeights = [1864, 1536, 1220, 2600, 1864, 1864, 1536, 1536];\nvar springSystem = new rebound.SpringSystem();\nvar mainSpring = springSystem.createSpring();\nvar downSpring = springSystem.createSpring();\nvar lastX = 0;\nvar panVelocity = 0;\nvar isDragging = false;\n\n$(document).ready(function(reboundCarousel) {\n    'use strict';\n    viewportWidth = $('#wrapper').innerWidth();\n    viewportHeight = $('#slides li').innerHeight();\n    var totalWidth = calculateTabWidths();\n    nav = document.getElementById('nav');\n    layoutCaptions();\n    $(window).on('resize', function() {\n        layoutCaptions();\n    });\n    // Size the container to fit\n    $('#nav').width(totalWidth);\n    $('#nav li').each(function(i, val) {\n        navOffsets[i] = navOffsetForIndex(i);\n        tabs[i] = val;\n    });\n    setupMainSpring();\n    setupPanSupport();\n    setupTabPressedStates();\n    setupArrowKeys();\n    $('#slides li').each(function(i, val) {\n        val.style.webkitTransform = 'translate3d(' + viewportWidth * i + 'px, 0, 0)';\n        val.style.MozTransform = 'translate3d(' + viewportWidth * i + 'px, 0, 0)';\n        slides[i] = val;\n    });\n    // Select the first tab\n    selectTabIndex(0, false);\n    // Behavior when the tabs are clicked\n    var down = [];\n    $('#nav li').each(function(i, val) {\n        $(val).click(function() {\n            selectTabIndex(i, true);\n        });\n        $(val).mousedown(function() {\n            down[i] = true;\n            pressDownOnTabIndex(i);\n        });\n        $(val).mouseup(function() {\n            down[i] = false;\n            releaseDownOnTabIndex(i);\n        });\n        $(val).mouseleave(function() {\n            if (down[i] === true)\n            releaseDownOnTabIndex(i);\n        });\n        $(val).mouseenter(function() {\n            if (down[i] === true)\n            pressDownOnTabIndex(i);\n        });\n    });\n    $('#wrapper').mouseup(function() {\n        down = [];\n    });\n});\n\n// Setup Rebound Spring\nsetupMainSpring = function() {\n    mainSpring.setSpringConfig(rebound.SpringConfig.fromOrigamiTensionAndFriction(4.5, 5.7));\n    mainSpring.addListener({\n        onSpringUpdate: function(spring) {\n            // Progress from 0 to n\n            var progress = spring.getCurrentValue();\n            // Slide the tabs over\n            var xTranslation = transitionForProgressInSteps(progress, navOffsets);\n            // Pixel snap when the spring is nearing rest on non-retina displays\n            if (Math.abs(spring.getVelocity()) < 0.05 && window.devicePixelRatio < 1.1) xTranslation = Math.floor(xTranslation);\n            nav.style.webkitTransform = 'translate3d(' + xTranslation + 'px, 0, 0)';\n            nav.style.MozTransform = 'translate3d(' + xTranslation + 'px, 0, 0)';\n            // Other transitions\n            $('#slides li').each(function(i, val) {\n                var slideProgress = 1 - Math.abs(progress - i);\n                // Slide and scale the images\n                if (slideProgress > 0) { // Only bother if the slide is visible\n                    // Slide and scale\n                    var x = (i * viewportWidth) - (progress * viewportWidth);\n                    var scale = transitionForProgressInRange(slideProgress, 0.6, 1.0);\n                    val.style.webkitTransform = 'translate3d(' + x + 'px, 0, 0) scale(' + scale + ')';\n                    val.style.MozTransform = 'translate3d(' + x + 'px, 0, 0) scale(' + scale + ')';\n                    // Fade in the caption when nearing rest\n                    if (i < captions.length) {\n                        var captionOpacity = transitionForProgressInRange(slideProgress, -8.0, 1.0);\n                        captions[i].style.opacity = captionOpacity;\n                    }\n                }\n                // Hide the off-screen images so they don't reveal themselves if you resize the browser\n                val.style.opacity = (slideProgress > 0) ? 1.0 : 0.0;\n                // Show the current tab as black, others grey\n                var tabOpacity = transitionForProgressInRange(clampedProgress(slideProgress), 0.2, 1, 0);\n                tabs[i].style.opacity = tabOpacity;\n            });\n        }\n    });\n};\n\n// Setup panning support for touch and mouse\nsetupPanSupport = function() {\n    var item = document.getElementById('slides');\n    item.addEventListener('touchstart', function(e) {\n        var touch = e.touches[0];\n        startDragging(touch.pageX);\n    }, false);\n    item.addEventListener('touchmove', function(e) {\n        e.preventDefault(); // Stop vertical rubberbanding on iOS\n        var touch = e.touches[0];\n        continueDragging(touch.pageX);\n    }, false);\n    item.addEventListener('touchend', function(e) {\n        endDragging();\n    }, false);\n    item.addEventListener('touchcancel', function(e) {\n        endDragging();\n    }, false);\n    item.addEventListener('mousedown', function(e) {\n        startDragging(e.clientX);\n    }, false);\n    item.addEventListener('mousemove', function(e) {\n        if (isDragging) continueDragging(e.clientX);\n    }, false);\n    item.addEventListener('mouseup', function(e) {\n        endDragging();\n    }, false);\n    item.addEventListener('mouseleave', function(e) {\n        if (isDragging) endDragging();\n    }, false);\n};\n\n// When you start dragging #wrapper is same width as viewport\nstartDragging = function(x) {\n    lastX = x;\n    isDragging = true;\n    viewportWidth = $('#wrapper').innerWidth();\n    mainSpring.setAtRest();\n    $('#slides').addClass('dragging');\n};\n\n// Continue dragging\ncontinueDragging = function(x) {\n    panVelocity = x - lastX;\n    lastX = x;\n    var progress = progressForValueInRange(panVelocity, 0, -viewportWidth);\n    var currentValue = mainSpring.getCurrentValue();\n    // Rubberband when beyond the scroll boundaries\n    if ((currentValue + progress) < 0 || (currentValue + progress) > tabs.length - 1) progress *= 0.5;\n    mainSpring.setCurrentValue(currentValue + progress);\n    mainSpring.setAtRest();\n};\n\n// Stop dradding\nendDragging = function() {\n    var currentPosition = mainSpring.getCurrentValue();\n    var restPosition = endValue;\n    var passedVelocityTolerance = (Math.abs(panVelocity) > 3);\n    var passedDistanceTolerance = Math.abs(currentPosition - restPosition) > 0.3;\n    var shouldAdvance = passedDistanceTolerance || passedVelocityTolerance;\n    var advanceForward = (panVelocity <= 0);\n    if (shouldAdvance) {\n        var targetIndex = advanceForward ? restPosition + 1 : restPosition - 1;\n        selectTabIndex(targetIndex, true);\n    } else {\n        selectTabIndex(restPosition, true);\n    }\n    var normalizedVelocity = progressForValueInRange(panVelocity, 0, -viewportWidth);\n    mainSpring.setVelocity(normalizedVelocity * 30);\n    panVelocity = 0;\n    isDragging = false;\n    $('#slides').removeClass('dragging');\n};\n\n// Calculate .caption postion relative to image size\nlayoutCaptions = function() {\n    // Distance between the center of the image and its optical right edge in the coordinate system of the native image resolution\n    var rightEdges = [374, 812, 268, 652, 374, 374, 812, 812];\n    var bottomEdges = [580, 545, 390, 642, 580, 580, 545, 545];\n    // Padding added to the bottom in the coordinate system of the slide divs\n    var applyBottomPadding = [false, true, false, false, false, false, true, true];\n    var slideItems = $('#slides li');\n    viewportWidth = slideItems.innerWidth();\n    viewportHeight = slideItems.innerHeight();\n    $('.caption').each(function(i, val) {\n        captions[i] = val;\n        var scale = calculateContentScaleForIndex(i);\n        var x = (viewportWidth / 2.0) + rightEdges[i] * scale;\n        var y = ((viewportHeight / 2.0) - (bottomEdges[i] * scale)) * -1;\n        var leftPadding = parseInt($(val).css('padding-left'), 10);\n        if (applyBottomPadding[i]) {\n            y -= leftPadding;\n        }\n        x = Math.round(x);\n        y = Math.round(y);\n        val.style.webkitTransform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n        val.style.MozTransform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n        captions[i].style.visibility = \"visible\";\n    });\n};\n\n// Set tension and fricion for pressed states.\nsetupTabPressedStates = function() {\n    downSpring.setSpringConfig(rebound.SpringConfig.fromOrigamiTensionAndFriction(100, 5.5));\n    downSpring.addListener({\n        onSpringUpdate: function(spring) {\n            var progress = spring.getCurrentValue();\n            var scale = transitionForProgressInRange(progress, 1.0, 0.92);\n            tabs[downIndex].style.webkitTransform = 'scale(' + scale + ')';\n            tabs[downIndex].style.MozTransform = 'scale(' + scale + ')';\n        }\n    });\n};\n\n// Apply pressDown to #nav li items\npressDownOnTabIndex = function(index) {\n    downIndex = index;\n    $('#nav li').each(function(i, val) {\n        if (i === index) {\n            downSpring.setEndValue(1);\n        }\n    });\n};\n\n// Apply releaseDown to #nav li items\nreleaseDownOnTabIndex = function(index) {\n    $('#nav li').each(function(i, val) {\n        if (i === index) {\n            downSpring.setEndValue(0);\n        }\n    });\n};\n\n// Set animated state when item is selected\nselectTabIndex = function(i, animated) {\n    if (i < 0) i = 0;\n    else if (i > tabs.length - 1) i = tabs.length - 1;\n    if (animated) {\n        viewportWidth = $('#wrapper').innerWidth();\n        endValue = i;\n        mainSpring.setEndValue(i);\n    } else {\n        mainSpring.setCurrentValue(i);\n    }\n};\n\nnavOffsetForIndex = function(i) {\n    var offset = 0;\n    if (i > 0) {\n        offset = (tabWidthRunningSum[i - 1] + (tabWidths[i] / 2.0)) * -1;\n    } else {\n        offset = ((tabWidths[i] / 2.0)) * -1;\n    }\n    return offset;\n};\n\ncalculateTabWidths = function() {\n    var totalWidth = 0;\n    $('#nav li').each(function(i, val) {\n        tabWidths[i] = $(val).innerWidth();\n        tabWidthRunningSum[i] = tabWidths[i];\n        if (i > 0) {\n            tabWidthRunningSum[i] = tabWidthRunningSum[i] + tabWidthRunningSum[i - 1];\n        }\n        totalWidth += tabWidths[i];\n    });\n    return totalWidth;\n};\n\ncalculateContentScaleForIndex = function(i) {\n    var contentWidth = imageWidths[i];\n    var contentHeight = imageHeights[i];\n    var scale = ((viewportWidth / viewportHeight) > (contentWidth / contentHeight)) ? (viewportHeight / contentHeight) : (viewportWidth / contentWidth);\n    return scale;\n};\n\nsetupArrowKeys = function() {\n    var initialPress = true;\n    var isRubberbanding = false;\n    $(document).keydown(function(e) {\n        var currentIndex = endValue;\n        var positionTolerance = 0.001;\n        var maxRubberbandDistance = 0.03; // Normalized\n        var inRubberbandableRegion = false;\n        if (e.keyCode == 37) { // Left arrow key\n            inRubberbandableRegion = mainSpring.getCurrentValue() < positionTolerance;\n            if (inRubberbandableRegion && initialPress) {\n                isRubberbanding = true;\n                mainSpring.setEndValue(mainSpring.getCurrentValue() - maxRubberbandDistance);\n            } else if (!inRubberbandableRegion) {\n                isRubberbanding = false;\n                selectTabIndex(currentIndex - 1, true);\n            }\n        } else if (e.keyCode == 39) { // Right arrow key\n            inRubberbandableRegion = mainSpring.getCurrentValue() > ((tabs.length - 1) - positionTolerance);\n            if (inRubberbandableRegion && initialPress) {\n                isRubberbanding = true;\n                mainSpring.setEndValue(mainSpring.getCurrentValue() + maxRubberbandDistance);\n            } else if (!inRubberbandableRegion) {\n                isRubberbanding = false;\n                selectTabIndex(currentIndex + 1, true);\n            }\n        }\n        initialPress = false;\n    });\n    // When rubberbanding, snap back to the correct rest value on key up\n    $(document).keyup(function(e) {\n        var currentIndex = endValue;\n        if (e.keyCode == 37 && isRubberbanding) { // Left arrow key\n            selectTabIndex(currentIndex - 1, true);\n        } else if (e.keyCode == 39 && isRubberbanding) { // Right arrow key\n            selectTabIndex(currentIndex + 1, true);\n        }\n        isRubberBanding = false;\n        initialPress = true;\n    });\n};\n\n// Utilities\nprogressForValueInRange = function(value, startValue, endValue) {\n    return (value - startValue) / (endValue - startValue);\n};\ntransitionForProgressInRange = function(progress, startValue, endValue) {\n    return startValue + (progress * (endValue - startValue));\n};\nclampedProgress = function(progress) {\n    if (progress < 0) progress = 0;\n    else if (progress > 1) progress = 1;\n    return progress;\n};\n// Progress: Float value from 0 - # of steps\n// Steps: Array of step values\n//\n// Example:\n// Progress: 1.5, Steps: 100, 200, 250, Result: 225\ntransitionForProgressInSteps = function(progress, steps) {\n    var transition = -1;\n    // Bail if there's fewer than two steps\n    if (steps.length < 2) {\n        return transition;\n    }\n    // If the progress is before the beginning of the range, extrapolate from the first and second steps.\n    if (progress < 0) {\n        transition = transitionForProgressInRange(progress, steps[0], steps[1]);\n    }\n    // If the progress is after the end of the range, extrapolate from the second last and last steps.\n    else if (progress > (steps.length - 1)) {\n        normalizedProgress = progressForValueInRange(progress, Math.floor(progress), Math.floor(progress) + 1);\n        normalizedProgress = normalizedProgress + 1;\n        transition = transitionForProgressInRange(normalizedProgress, steps[(steps.length - 2)], steps[(steps.length - 1)]);\n    }\n    // Supress potential NaNs\n    else if (progress == (steps.length - 1) || progress === 0) {\n        transition = steps[progress];\n    }\n    // Otherwise interpolate between steps\n    else {\n        normalizedProgress = progressForValueInRange(progress, Math.floor(progress), Math.floor(progress) + 1);\n        transition = transitionForProgressInRange(normalizedProgress, steps[Math.floor(progress)], steps[Math.floor(progress) + 1]);\n    }\n    return transition;\n};\n\n"]}